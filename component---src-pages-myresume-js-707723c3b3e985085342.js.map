{"version":3,"sources":["webpack:///./src/pages/myresume.js"],"names":["colors","fonts","fontSizes","theme","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledHeader","header","h1","green","lg","slate","StyledTableContainer","div","media","tablet","StyledTable","table","transition","lightNavy","md","SFMono","lightestSlate","MyResumesPage","_ref","data","location","resumes","allResume","nodes","revealTitle","useRef","revealTable","revealRows","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","createElement","Layout","Helmet","className","map","resume","key","el","title","href","filePath","target","rel","aria-label","FormattedIcon","name","download"],"mappings":"2FAAA,oHAUA,MAAM,OAAEA,EAAM,MAAEC,EAAK,UAAEC,GAAcC,IAE/BC,EAAsBC,YAAOC,KAAKC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAZJ,CAAY,MAElCK,EAAeL,IAAOM,OAAMJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAbJ,CAAa,iHAKjBH,EAAUU,GACdZ,EAAOa,MAIHX,EAAUY,GACdd,EAAOe,OAIdC,EAAuBX,IAAOY,IAAGV,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAVJ,CAAU,4BAEnCa,IAAMC,MAAM;;KAKVC,EAAcf,IAAOgB,MAAKd,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAZJ,CAAY,2XAMdF,IAAMmB,WAGEtB,EAAOuB,UAO3BL,IAAMC,MAAM;;MAGDjB,EAAUsB,GACRvB,EAAMwB,OAIZzB,EAAOa,MACHX,EAAUY,GAWZd,EAAO0B,cAIL1B,EAAOa,OAgFTc,UA1EOC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACvC,MAAMG,EAAUF,EAAKG,UAAUC,MAEzBC,EAAcC,iBAAO,MACrBC,EAAcD,iBAAO,MACrBE,EAAaF,iBAAO,IAQ1B,OANAG,oBAAU,KACRC,IAAGC,OAAON,EAAYO,QAASC,sBAC/BH,IAAGC,OAAOJ,EAAYK,QAASC,sBAC/BL,EAAWI,QAAQE,QAAQ,CAACC,EAAKC,IAAMN,IAAGC,OAAOI,EAAKF,mBAAa,GAAJG,MAC9D,IAGDC,IAAAC,cAACC,IAAM,CAAClB,SAAUA,GAChBgB,IAAAC,cAACE,SAAM,KACLH,IAAAC,cAAA,aAAO,eAGTD,IAAAC,cAAC3C,EAAmB,KAClB0C,IAAAC,cAACrC,EAAY,CAACkC,IAAKV,GACjBY,IAAAC,cAAA,MAAIG,UAAU,aAAY,cAC1BJ,IAAAC,cAAA,KAAGG,UAAU,YAAW,yCAG1BJ,IAAAC,cAAC/B,EAAoB,CAAC4B,IAAKR,GACzBU,IAAAC,cAAC3B,EAAW,KACV0B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,cAGRD,IAAAC,cAAA,aACGhB,EAAQoB,IAAI,CAACC,EAAQP,IACpBC,IAAAC,cAAA,MAAIM,IAAKR,EAAGD,IAAKU,GAAOjB,EAAWI,QAAQI,GAAKS,GAC9CR,IAAAC,cAAA,UAAKK,EAAOG,OACZT,IAAAC,cAAA,UACED,IAAAC,cAAA,KACEG,UAAU,cACVM,KAAMJ,EAAOK,SACbC,OAAO,SACPC,IAAI,sBACJC,aAAY,QAAQR,EAAOG,OAE3BT,IAAAC,cAACc,IAAa,CAACC,KAAK,eAGxBhB,IAAAC,cAAA,UACED,IAAAC,cAAA,KACEG,UAAU,cACVM,KAAMJ,EAAOK,SACbM,UAAQ,EACRH,aAAY,YAAYR,EAAOG,OAE/BT,IAAAC,cAACc,IAAa,CAACC,KAAK","file":"component---src-pages-myresume-js-707723c3b3e985085342.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport sr from '@utils/sr';\nimport { srConfig } from '@config';\nimport { Layout } from '@components';\nimport { FormattedIcon } from '@components/icons';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main } from '@styles';\n\nconst { colors, fonts, fontSizes } = theme;\n\nconst StyledMainContainer = styled(Main)``;\n\nconst StyledHeader = styled.header`\n  text-align: center;\n  margin-bottom: 40px;\n\n  .big-title {\n    font-size: ${fontSizes.h1};\n    color: ${colors.green};\n  }\n\n  .subtitle {\n    font-size: ${fontSizes.lg};\n    color: ${colors.slate};\n  }\n`;\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  text-align: center;\n\n  tbody tr {\n    transition: ${theme.transition};\n    &:hover,\n    &:focus {\n      background-color: ${colors.lightNavy};\n    }\n  }\n\n  th,\n  td {\n    padding: 15px 20px;\n    ${media.tablet`\n      padding: 10px;\n    `};\n    font-size: ${fontSizes.md};\n    font-family: ${fonts.SFMono};\n  }\n\n  th {\n    color: ${colors.green};\n    font-size: ${fontSizes.lg};\n  }\n\n  td .icon-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: 6px;\n    svg {\n      width: 22px;\n      height: 22px;\n      color: ${colors.lightestSlate};\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${colors.green};\n      }\n    }\n  }\n`;\n\nconst MyResumesPage = ({ data, location }) => {\n  const resumes = data.allResume.nodes;\n\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealRows = useRef([]);\n\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig());\n    revealRows.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>My Resumes</title>\n      </Helmet>\n\n      <StyledMainContainer>\n        <StyledHeader ref={revealTitle}>\n          <h1 className=\"big-title\">My Resumes</h1>\n          <p className=\"subtitle\">Versions tailored to different roles</p>\n        </StyledHeader>\n\n        <StyledTableContainer ref={revealTable}>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Resume</th>\n                <th>View</th>\n                <th>Download</th>\n              </tr>\n            </thead>\n            <tbody>\n              {resumes.map((resume, i) => (\n                <tr key={i} ref={el => (revealRows.current[i] = el)}>\n                  <td>{resume.title}</td>\n                  <td>\n                    <a\n                      className=\"icon-button\"\n                      href={resume.filePath}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      aria-label={`View ${resume.title}`}\n                    >\n                      <FormattedIcon name=\"External\" />\n                    </a>\n                  </td>\n                  <td>\n                    <a\n                      className=\"icon-button\"\n                      href={resume.filePath}\n                      download\n                      aria-label={`Download ${resume.title}`}\n                    >\n                      <FormattedIcon name=\"Download\" />\n                    </a>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </StyledTable>\n        </StyledTableContainer>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\n\nMyResumesPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default MyResumesPage;\n\nexport const query = graphql`\n  {\n    allResume {\n      nodes {\n        title\n        filePath\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}